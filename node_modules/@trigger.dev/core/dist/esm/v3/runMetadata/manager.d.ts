import { DeserializedJson } from "../../schemas/json.js";
import { ApiClient } from "../apiClient/index.js";
import { AsyncIterableStream } from "../apiClient/stream.js";
import { FlushedRunMetadata } from "../schemas/common.js";
import { ApiRequestOptions } from "../zodfetch.js";
import { RunMetadataManager, RunMetadataUpdater } from "./types.js";
export declare class StandardMetadataManager implements RunMetadataManager {
    #private;
    private apiClient;
    private streamsBaseUrl;
    private streamsVersion;
    private flushTimeoutId;
    private isFlushing;
    private store;
    private activeStreams;
    private queuedOperations;
    private queuedParentOperations;
    private queuedRootOperations;
    runId: string | undefined;
    constructor(apiClient: ApiClient, streamsBaseUrl: string, streamsVersion?: "v1" | "v2");
    get parent(): RunMetadataUpdater;
    get root(): RunMetadataUpdater;
    enterWithMetadata(metadata: Record<string, DeserializedJson>): void;
    current(): Record<string, DeserializedJson> | undefined;
    getKey(key: string): DeserializedJson | undefined;
    private enqueueOperation;
    set(key: string, value: DeserializedJson): this;
    del(key: string): this;
    append(key: string, value: DeserializedJson): this;
    remove(key: string, value: DeserializedJson): this;
    increment(key: string, increment?: number): this;
    decrement(key: string, decrement?: number): this;
    update(metadata: Record<string, DeserializedJson>): this;
    stream<T>(key: string, value: AsyncIterable<T> | ReadableStream<T>, signal?: AbortSignal): Promise<AsyncIterable<T>>;
    fetchStream<T>(key: string, signal?: AbortSignal): Promise<AsyncIterableStream<T>>;
    private doStream;
    hasActiveStreams(): boolean;
    waitForAllStreams(timeout?: number): Promise<void>;
    refresh(requestOptions?: ApiRequestOptions): Promise<void>;
    flush(requestOptions?: ApiRequestOptions): Promise<void>;
    startPeriodicFlush(intervalMs?: number): void;
    stopPeriodicFlush(): void;
    stopAndReturnLastFlush(): FlushedRunMetadata | undefined;
}
